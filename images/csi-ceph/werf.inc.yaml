{{- $version := "3.12.1" }}

{{- $binaries := "/cephcsi /sbin/mount.ceph /usr/bin/ceph-fuse /bin/mount /bin/umount /sbin/fsck /sbin/modprobe /bin/kmod /usr/bin/rbd /usr/bin/rbd-nbd /sbin/blkid /sbin/mkfs /sbin/mkfs.ext4 /sbin/mkfs.xfs /sbin/blockdev /sbin/dumpe2fs /usr/sbin/xfs_io /usr/sbin/xfs_growfs /sbin/resize2fs" }}
---
image: {{ $.ImageName }}-binaries-artifact
from: {{ $.Images.BASE_ALT_DEV }}
final: false

git:
{{- if (env "EMBEDDED_MODULE" false false) }}
  - add: /modules/999-csi-ceph/images/{{ $.ImageName }}/patches
{{- else }}
  - add: /images/{{ $.ImageName }}/patches
{{- end }}
    to: /patches
    stageDependencies:
      setup:
        - "**/*"
shell:
  install:
    - export GOPROXY={{ env "GOPROXY" }}
    - export CGO_ENABLED=1
    - git clone --branch v{{ $version }} --depth 1 {{ env "SOURCE_REPO" }}/ceph/ceph-csi.git /src
    - cd /src
    - git apply /patches/*.patch --verbose
    - make cephcsi
    - cp _output/cephcsi /cephcsi
    - /binary_replace.sh -i "{{ $binaries }}" -o /relocate
---
image: {{ $.ImageName }}-distroless-artifact
from: {{ $.Images.BASE_ALPINE_DEV }}
final: false

shell:
  install:
    - mkdir -p /relocate/bin /relocate/sbin /relocate/etc /relocate/etc/ssl /relocate/usr/bin /relocate/usr/sbin /relocate/usr/share
    - cp -pr /tmp /relocate
    - cp -pr /etc/passwd /etc/group /etc/hostname /etc/hosts /etc/shadow /etc/protocols /etc/services /etc/nsswitch.conf /relocate/etc
    - cp -pr /usr/share/ca-certificates /relocate/usr/share
    - cp -pr /usr/share/zoneinfo /relocate/usr/share
    - cp -pr etc/ssl/cert.pem /relocate/etc/ssl
    - cp -pr /etc/ssl/certs /relocate/etc/ssl
    - echo "deckhouse:x:64535:64535:deckhouse:/:/sbin/nologin" >> /relocate/etc/passwd
    - echo "deckhouse:x:64535:" >> /relocate/etc/group
    - echo "deckhouse:!::0:::::" >> /relocate/etc/shadow
---
image: {{ $.ImageName }}-distroless
from: {{ $.Images.BASE_SCRATCH }}
final: false

import:
  - image: {{ $.ImageName }}-distroless-artifact
    add: /relocate
    to: /
    before: setup

---
image: {{ $.ImageName }}
fromImage: {{ $.ImageName }}-distroless
import:
  - image: {{ $.ImageName }}-binaries-artifact
    add: /relocate
    to: /
    before: setup

docker:
  ENTRYPOINT: ["/cephcsi"]
