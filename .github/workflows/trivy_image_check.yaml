name: Build and checks

on:
  schedule:
    - cron: '0 23 * * 0,3'
      scan_three_last_releases: 'true'
  pull_request:
    types: [opened, reopened, labeled, synchronize]
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      release_branch:
        description: "release branch name, example: release-1.68"
        required: false
      scan_three_last_releases:
        description: 'true/false. whether to scan last 3 releases or not. useful for scheduled task'
        required: false

jobs:
  build_dev:
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/build_dev.yml
    secrets: inherit
  cve_scan_on_pr:
    if: github.event_name == 'pull_request'
    name: CVE scan for PR
    runs-on: [self-hosted, regular]
    needs: [build_dev]
    steps:
      - uses: actions/checkout@v4
      - uses: deckhouse/modules-actions/cve_scan@chore/cve_scheduled_scan
        with:
          image: ${{ vars.DEV_MODULE_SOURCE }}/${{ vars.MODULE_NAME }}
          tag: pr${{ github.event.number }}
          module_name: ${{ vars.MODULE_NAME }}
          dd_url: ${{ secrets.DEFECTDOJO_HOST }}
          dd_token: ${{ secrets.DEFECTDOJO_API_TOKEN }}
          prod_registry: ${{ vars.PROD_REGISTRY }}
          prod_registry_user: ${{ vars.PROD_MODULES_REGISTRY_LOGIN }}
          prod_registry_password: ${{ secrets.PROD_MODULES_READ_REGISTRY_PASSWORD }}
          deckhouse_private_repo: ${{ secrets.DECKHOUSE_PRIVATE_REPO }}
  cve_scan:
    if: github.event_name != 'pull_request'
    name: Regular CVE scan
    runs-on: [self-hosted, regular]
    steps:
      - uses: actions/checkout@v4
      - name: Sets env vars for manual run
        run: |
          echo "MODULE_IMAGE_TAG=${{ github.event.inputs.release_branch || 'main' }}" >> $GITHUB_ENV
        if: github.event_name != 'workflow_dispatch'
      - uses: deckhouse/modules-actions/cve_scan@chore/cve_scheduled_scan
        with:
          image: ${{ vars.DEV_MODULE_SOURCE }}/${{ vars.MODULE_NAME }}
          tag: ${{ env.MODULE_IMAGE_TAG || 'main' }}
          module_name: ${{ vars.MODULE_NAME }}
          dd_url: ${{ secrets.DEFECTDOJO_HOST }}
          dd_token: ${{ secrets.DEFECTDOJO_API_TOKEN }}
          prod_registry: ${{ vars.PROD_REGISTRY }}
          prod_registry_user: ${{ vars.PROD_MODULES_REGISTRY_LOGIN }}
          prod_registry_password: ${{ secrets.PROD_MODULES_READ_REGISTRY_PASSWORD }}
          dev_registry: ${{ vars.DEV_REGISTRY }}
          dev_registry_user: ${{ vars.DEV_MODULES_REGISTRY_LOGIN }}
          dev_registry_password: ${{ secrets.DEV_MODULES_REGISTRY_PASSWORD }}
          deckhouse_private_repo: ${{ secrets.DECKHOUSE_PRIVATE_REPO }}
          scan_three_last_releases: ${{ github.event.schedule.scan_three_last_releases || github.event.inputs.scan_three_last_releases }}
